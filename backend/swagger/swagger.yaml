openapi: 3.0.0
info:
  title: ISA
  version: 1.0.0
servers:
  - url: http://localhost:8000
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
    noauthAuth:
      type: http
      scheme: noauth
tags:
  - name: Company/Equipment
  - name: New Folder
paths:
  /company/update/1/:
    patch:
      tags:
        - Company/Equipment
      summary: Update Company
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                company_name: Kompanijaaaa
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /company/add-equipment/1/4/:
    patch:
      tags:
        - Company/Equipment
      summary: Add Equipment to Company
      requestBody:
        content: {}
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /company/remove-equipment/1/4/:
    delete:
      tags:
        - Company/Equipment
      summary: Remove Equipment from Company
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /company/pickup-slots/create/:
    post:
      tags:
        - Company/Equipment
      summary: Create Pickup Slot
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                date: '2024-09-03'
                time: '10:00:00'
                duration: '01:30:00'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /company/pickup-slots/2/reserve/:
    patch:
      tags:
        - Company/Equipment
      summary: Reserve Pickup Slot
      requestBody:
        content: {}
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /account/register:
    post:
      tags:
        - default
      summary: Register user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: user
                email: user@user.com
                password: thisismypassword
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /account/register-admin:
    post:
      tags:
        - default
      summary: Register admin
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: admin
                email: admin@admin.com
                password: thisismypassword
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
          example: >-
            eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzIzOTk3NTM1LCJpYXQiOjE3MjM5OTM5MzUsImp0aSI6IjVjODViMWFkZDA5NjQ4YjlhNWFkMDI1NmM3NDJkMmQ2IiwidXNlcl9pZCI6MX0.jd-FvbwqzBEjlQIMaQgeCnn97MIYuU7mqsivOy10GGw
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /login/:
    post:
      tags:
        - default
      summary: Login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: admin@admin.com
                password: thisismypassword
      security:
        - noauthAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /user/verify/:
    post:
      tags:
        - default
      summary: verify-email
      requestBody:
        content: {}
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /user/verify-email-confirm/OA/cc0jsk-2672716e931f37ce2286fa6f5f9b5009/:
    get:
      tags:
        - default
      summary: Confirm Email Code
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /account/update-company-admin/:
    patch:
      tags:
        - default
      summary: Update Company Admin
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                account:
                  name: dusaan123
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /account/register-company-admin:
    post:
      tags:
        - default
      summary: Register Company Admin
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: user
                email: user@user.com
                company: 1
                password: thisismypassword
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /company/company-calendar/:
    get:
      tags:
        - default
      summary: CompanyCalender
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /complaints/:
    get:
      tags:
        - default
      summary: UserComplaints
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /equipment/equipment-with-companies/:
    get:
      tags:
        - default
      summary: EquipmentWithCompanies
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /account/company-admins/:
    get:
      tags:
        - default
      summary: GetCompanyAdmins
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /account/system-admins/:
    get:
      tags:
        - default
      summary: GetSystemAdmins
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /complaints/answer/:
    post:
      tags:
        - default
      summary: Answer Complaint
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                complaint_id: 1
                admin_answer: Hey there you're a rock star
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /company/:
    post:
      tags:
        - default
      summary: Save Company
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                company_name: New
                address: Adress 22
                description: This is a test company
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /league:
    get:
      tags:
        - default
      summary: Get league
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}